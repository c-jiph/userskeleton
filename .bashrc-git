alias vi=vim_check
alias ls='ls --color'
alias sl='ls --color'
alias grep='grep --color=auto'
shopt -s checkwinsize
shopt -s histappend
export EDITOR=vim
HISTSIZE=1000000

export FZF_TMUX=1
if [ -f /usr/share/fzf/shell/key-bindings.bash ] ; then
  . /usr/share/fzf/shell/key-bindings.bash
elif [ -f /usr/share/doc/fzf/examples/key-bindings.bash ] ; then
  . /usr/share/doc/fzf/examples/key-bindings.bash
fi

WHITE="\[\033[1;37m\]"
PURPLE="\[\033[0;35m\]"
YELLOW="\[\033[1;33m\]"
CYAN="\[\033[1;36m\]"

function check_sudo_vim() 
{
	local reason=$1
	shift

	echo -n "$reason, use sudo? [Y/n/q]:"
	read response
	case $response in
		[nN])
			return 1
			;;
		[qQ])
			return 0
			;;
		*)
			sudo vim "$@"
			return 0
			;;
	esac
}

function vim_check()
{
	if [[ $# == 0 ]] && ! [ -w . ] ; then
		check_sudo_vim "Current directory is not writable" && return
	fi

	for x in "$@" ; do
		if [ -d "$x" ] ; then
			continue
		fi

		if [ -e "$x" ] ; then 
			if ! [ -w "$x" ] ; then
				check_sudo_vim "File '$x' is not writable" "$@" && return
			fi
		else
			if ! [ -w . ] ; then
				check_sudo_vim "File '$x' does not exist and current directory is not writable" "$@" && return
			fi
		fi
	done

	vim "$@"
}

function prompt_command
{
	if [ -z $PROMPT_COLOUR ] ; then
		PROMPT_COLOUR="\[\033[1;35m\]"
	fi
        NO_COLOUR="\[\033[0m\]"
        CYAN="\[\033[1;36m\]"

        COORDINDATES="${USER}@${HOSTNAME}:${PWD}"
        COORDLEN=${#COORDINDATES}
        FILL=$[${COLUMNS} - ${COORDLEN} - 1]
        COORDINDATES="${CYAN}${COORDINDATES}"
        if [ $FILL -gt 4 ] ; then
                COORDINDATESLINE="${PROMPT_COLOUR}-{${COORDINDATES}${PROMPT_COLOUR}}"
                while [ ${FILL} -gt 2 ] ; do
                        COORDINDATESLINE=${COORDINDATESLINE}-
                        FILL=$[${FILL} - 1]
                done
        else
                COORDINDATESLINE=$COORDINDATES
        fi
	case $TERM in
        	xterm*)
			IFS='/' read -ra PWD_ARRAY <<< "$PWD"
			BACKWARDS_CORDS=""
			for((i=${#PWD_ARRAY[@]}-1;i>0;i--)); do
				BACKWARDS_CORDS="$BACKWARDS_CORDS${PWD_ARRAY[$i]}/"
			done
			BACKWARDS_CORDS="$BACKWARDS_CORDS:$HOSTNAME@$USER"
			TITLEBAR="\[\033]0;$BACKWARDS_CORDS\007\]"
        	;;
        	*)
                	TITLEBAR=""
        	;;
	esac
        export PS1="${TITLEBAR}\n${COORDINDATESLINE}\n${NO_COLOUR}\\$ "
        history -a
}

function stealth_shell
{
	export STEALTH_SHELL=1
	unset HISTFILE
}

if [ $TERM = xterm ] ; then
	export TERM=xterm-256color
fi

export PROMPT_COMMAND="prompt_command"
